<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EmployeeFinder_Client">
    <Style x:Key="BarButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="18"></Setter>
        <Setter Property="Width" Value="18"></Setter>
        <Setter Property="Opacity" Value="0.6"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderThickness="2" Padding="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Century Gothic"></Setter>
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#ef233c"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="4"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="LogInButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="bg" TargetType="{x:Type Button}">
                    <Border x:Name="border"
                                Width="123"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                Height="30"
                                BorderBrush="#00171f"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                TextBlock.Foreground="White">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              TextBlock.FontFamily="Century Gothic Bold"
                                              TextBlock.FontSize="18"
                                              TextBlock.TextAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="White"/>
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#00171f"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value=".7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="border" CornerRadius="5"
                                BorderBrush="White"
                                BorderThickness="3"
                                Background="Transparent"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="20"
                                Height="20"
                                Opacity="1">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#f7f7ff"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InfoWindowStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
    <Style x:Key="AddButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="ct" TargetType="Button">
                    <Border x:Name="border"
                                Background="#00a8e8"
                                BorderThickness="0"
                                CornerRadius="3"
                                TextBlock.Foreground="White">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              TextBlock.FontFamily="Century Gothic Bold"
                                              TextBlock.FontSize="17"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#00171f"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value=".7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoteStyle" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Margin="10, 10, 10, 0">
                        <Border x:Name="border"
                                    Background="Transparent"
                                    BorderThickness="2"
                                    BorderBrush="#00a8e8"
                                    Width="20"
                                    Height="20"
                                    CornerRadius="10"
                                    ></Border>
                        <ContentPresenter x:Name="content"
                                              Margin="10,0,0,0"
                                              Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              TextBlock.FontFamily="Century Gothic"
                                              TextBlock.FontSize="18"
                                              TextBlock.Foreground="Black"
                                              HorizontalAlignment="Center"
                                              ></ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#00a8e8"></Setter>
                            <Setter TargetName="content" Property="TextBlock.TextDecorations" Value="Strikethrough"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Height="{TemplateBinding Height}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Background="Transparent">
                            <ScrollContentPresenter/>
                        </Border>
                        <ScrollBar Grid.Column="1" x:Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="NaN"
                                       Visibility="Hidden"
                                       Background="Transparent"
                                       Opacity="0"
                                       Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_VerticalScrollBar" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="PART_VerticalScrollBar">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.3"
                                                             From="0"
                                                             To="0.7"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="PART_VerticalScrollBar">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.3"
                                                             From="0.7"
                                                             To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoteTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Century Gothic"></Setter>
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="Margin" Value="0, 0, 0, 10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="MessageButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                Width="50"
                                Height="50"
                                BorderBrush="#00171f"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                TextBlock.Foreground="White">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          TextBlock.FontFamily="Century Gothic Bold"
                                          TextBlock.FontSize="18"
                                          TextBlock.TextAlignment="Center"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="White"/>
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#00171f"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value=".7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MessageButtonStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="15"
                                BorderBrush="White"
                                MaxWidth="250"
                                Margin="0,3"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                TextBlock.Foreground="White">
                        <DockPanel MaxWidth="420">
                            <TextBlock Text="{TemplateBinding Content}" 
                                           DockPanel.Dock="Top"
                                           TextWrapping="Wrap"
                                           Margin="10 5"
                                           FontFamily="Century Gothic Bold"
                                           FontSize="17"
                                           TextAlignment="Center"
                                           VerticalAlignment="Center"></TextBlock>
                            <TextBlock Text="{Binding obj}" 
                                           DockPanel.Dock="Top"
                                           TextWrapping="Wrap"
                                           Margin="10 3"
                                           FontFamily="Century Gothic Bold"
                                           FontSize="12"
                                           TextAlignment="Right"
                                           VerticalAlignment="Center"></TextBlock>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SentMessage}" Value="True">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Background" Value="#0096c7"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SentMessage}" Value="False">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Background" Value="Transparent"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CompanyDataGridStyle" TargetType="DataGrid">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#003459" />
        <Setter Property="HorizontalGridLinesBrush" Value="#003459" />
        <Setter Property="VerticalGridLinesBrush" Value="#003459" />
        <Setter Property="Foreground" Value="#003459"/>

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="FontSize" Value="13"/>
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#007EA7" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#007EA7" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#007EA7" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>-->
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Padding" Value="3 0 0 0"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SendMessage" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="bg" TargetType="{x:Type Button}">
                    <Border x:Name="border"
                                Background="White"
                                CornerRadius="5"
                                TextBlock.Foreground="#003459">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              TextBlock.FontFamily="Century Gothic Bold"
                                              TextBlock.FontSize="18"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="White"/>
                            <Setter TargetName="border" Property="TextBlock.Foreground" Value="#00171f"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value=".7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Century Gothic"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>
    <Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="border"
                                Margin="0,2,0,0"
                                Height="70"
                                Padding="5,0"
                                Background="#caf0f8"
                                BorderBrush="White"
                                BorderThickness="1"
                                CornerRadius="5">
                        <DockPanel>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                TextBlock.FontFamily="Century Gothic"
                                TextBlock.FontSize="18"
                                TextBlock.Foreground="Black"
                                TextBlock.TextAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="5"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#0077b6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="7" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}"  Height="30"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolTip}"
       TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                BorderThickness="1"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Background="{TemplateBinding Background}">

                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF888888" />
                        </Border.BorderBrush>
                        <ContentPresenter Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                            <Setter TargetName="Border"
                    Property="SnapsToDevicePixels"
                    Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>